---
import { getCollection } from 'astro:content';
const collection = await getCollection('collection');
import Page from './_index';
import { Pointer } from './_pointer';
const [USER, REPO] = import.meta.env.GITHUB_REPOSITORY.split('/');
let data;
try {
  const response = await fetch(import.meta.env.GITHUB_GRAPHQL_URL, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      Authorization: `Bearer ${import.meta.env.GITHUB_TOKEN}`,
    },
    body: JSON.stringify({
      query: `query {
        user(login:"${USER}") {
          login
          url
          websiteUrl
          name
          avatarUrl
          bio
          company
          email
          isHireable
          location
          pronouns
          followers { totalCount }
          following { totalCount }
          status { message }
          socialAccounts(first:4) {
            edges {
              node {
                url
              }
            }
          }
          repository(name:"${REPO}") {
            description
       	  }
          pinnedItems(first:6) {
            edges {
              node {
                ... on Repository {
                  collaborators { totalCount }
                  description
                  forks { totalCount }
                  homepageUrl
                  languages(first:99,orderBy:{direction:DESC,field:SIZE}) {
                    totalSize
                    edges {
                      node { name color }
                      size
                    }
                  }
                  name
                  owner { login url }
                  stargazers { totalCount }
                  url
                  watchers { totalCount }
                }
              }
            }
          }
        }
      }
      `,
    }),
  });
  const json = await response.json();
  data = json.data;
} catch (error) {
  console.error(error);
}
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
      {
        data?.user?.repository?.description
          ? data?.user?.repository?.description
          : data?.user?.name
      }
    </title>
    <link
      href="https://api.fontshare.com/v2/css?f[]=satoshi@1&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://api.fontshare.com/v2/css?f[]=melodrama@1&display=swap"
      rel="stylesheet"
    />
  </head>
  <body
    class="bg-black text-white h-svh w-svw font-['Satoshi'] [font-size:clamp(0.5rem,1.618vmin,1rem)] cursor-none"
  >
    <Pointer size="32" hover="data-hover-pointer" client:only="react" />
    <Page
      client:load
      data={data}
      collection={collection}
      backgroundImage={''}
    />
  </body>
</html>

<style is:global>
  ::-webkit-scrollbar {
    display: none;
  }
  ::selection {
    background-color: rgba(0, 0, 0, 0.1);
  }
</style>

<script>
  import LocomotiveScroll from 'locomotive-scroll';
  const locomotiveScroll = new LocomotiveScroll();
</script>
